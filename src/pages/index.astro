---
import { getCollection, getEntryBySlug } from 'astro:content';

import BaseLayout from '../layouts/BaseLayout.astro';
import Card from '../components/Card.astro';
import Marquee from '../components/Marquee.astro';
import MorePost from '../components/MorePost.astro';
import LatestPosts from '../components/LatestPosts.astro';
import SocialLink from '../components/SocialLink.astro'

import { formatBlogPost } from '../js/utils';
import { Icon } from 'astro-icon';

const pageTitle = 'Trevor Lee | Homepage';
const allPosts = await getCollection('posts');
const formattedPosts = formatBlogPost(allPosts, {
  limit: 3,
});
const feature1 = await getEntryBySlug('posts', 'phished');
const feature2 = await getEntryBySlug('posts', 'text2array');
const feature3 = await getEntryBySlug('posts', 'design');
const featuredPost = [feature1];
const secondaryPosts = [feature2, feature3];
---

<BaseLayout pageTitle={pageTitle}>
  <div class="intro">

    <div class='descWrapper'>
    <h1 class='desc'>
      <span class="magic">
        <span class="magic-star">
          <Icon name="mdi:star-four-points" size="24" color="#FFC700" />
        </span>
        <span class="magic-star">
          <Icon name="mdi:star-four-points" size="24" color="#FFC700" />
        </span>
        <span class="magic-star">
          <Icon name="mdi:star-four-points" size="24" color="#FFC700" />
        </span>
        <span class="magic-text">Trevor Lee</span>
      </span>
      <span class='name'>â€“ I'm a software developer interested in design.</span>
    </h1>
    <!-- <div class='marquee'>
      <Marquee />
    </div> -->
  </div>

  </div>
  <hr />
  <div>
  {
    featuredPost.map((post) => (
      <Card
        title={post.data.title}
        desc={post.data.description}
        href={post.slug}
        src={post.data.image.src}
        alt={post.data.image.alt}
        featured={true}
      />
    ))
  }
  </div>
  <div class="secondary-posts">
  {
    secondaryPosts.map((post) => (
      <Card
        title={post.data.title}
        desc={post.data.description}
        href={post.slug}
        src={post.data.image.src}
        alt={post.data.image.alt}
        featured={false}
      />
    ))
  }
  </div>
  <hr />
  <LatestPosts />
</BaseLayout>

<style>

  .desc {
    font-size: 2rem;
    margin: 0;
    transition: 0.2s;
    cursor: none;
  }

  .magic-text {
    transition: 0.2s;
  }

  .desc:hover .magic-text {
    color: var(--text-color);
  }

  .descWrapper:hover .marquee {
    opacity: 0;
    transition: 0.2s;
  }

  .name {
    color: var(--text-color);
  }

  .desc:hover .name {
    opacity: 0.5;
    transition: 0.2s;
  }
  
  .intro {
    padding: 3rem 0 2rem 0;
  }

  .social-grid {
    display: flex;
    gap: 1rem;
    margin-top: 3rem;
    justify-content: center;
  }

  h2 {
    text-align: center;
  }

  .marquee {
    position: relative;
    margin-top: -6rem;
    user-select: none;
    z-index: -1;
    display: none;
    margin-bottom: 1rem;
    opacity: 1;
    transition: 0.2s;
  }

  @keyframes scale {
    from, to {
      transform: scale(0);
    }
    
    50% {
      transform: scale(1);
    }
  }

  @keyframes rotate {
    from {
      transform: rotate(0deg);
    }
    
    to {
      transform: rotate(180deg);
    }
  }

  h1 > .magic {
    position: relative;
  }

  h1 > .magic > .magic-star {
    --size: clamp(20px, 1.5vw, 30px);
    
    animation: scale 800ms ease forwards;
    display: block;
    height: var(--size);
    left: var(--star-left);
    position: absolute;
    top: var(--star-top);
    width: var(--size);
  }

  h1 > .magic > .magic-star > svg {
    animation: rotate 1200ms linear infinite;
    display: block;
  }

  h1 > .magic > .magic-star > svg > path {
    fill: var(--primary-color);
  }

  @media (min-width: 760px) {
    .secondary-posts {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));
    height: 100%;
  }
  }

  @media (min-width: 40rem) {
    .desc {
      font-size: 3rem;
    }
  }

  @media (prefers-reduced-motion: no-preference) {
    .marquee {
      display: block;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    h1 > .magic > .magic-star {
      display: none;
    }
  }
</style>

<script is:inline>

  const rand = (min, max) => 
    Math.floor(Math.random() * (max - min + 1)) + min;

  const animate = star => {
    star.style.setProperty("--star-left", `${rand(-10, 100)}%`);
    star.style.setProperty("--star-top", `${rand(-40, 80)}%`);

    star.style.animation = "none";
    star.offsetHeight;
    star.style.animation = "";
  }

  let timeouts = [],
    intervals = [];

  const intro = document.querySelector(".intro");

  intro.onmouseenter = () => {
    let index = 1;
  
    for(const star of document.getElementsByClassName("magic-star")) {
      timeouts.push(setTimeout(() => {  
        animate(star);
      
        intervals.push(setInterval(() => animate(star), 1000));
      }, index++ * 300));
    };
  }

  intro.onmouseleave = onMouseLeave = () => {
    for(const t of timeouts) clearTimeout(t);  
    for(const i of intervals) clearInterval(i);
    
    timeouts = [];
    intervals = [];
  }
</script>
