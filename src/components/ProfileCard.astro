---
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";
import profilePicture from "@assets/me-with-roxy.jpg";
import type { ImageMetadata } from "astro";

interface Props {
  images: ImageMetadata[];
  featureImage: ImageMetadata;
}

const { images, featureImage } = Astro.props;
---

<image-box
  data-images={JSON.stringify(images)}
  data-featureImage={featureImage}
  data-sparks
  id="image-box"
  class="group/{imageBox} flex gap-3 sm:gap-6"
>
  <Image
    data-sparks
    id="feature-image"
    format="avif"
    src={profilePicture}
    quality={"med"}
    alt="Me and my friend Roxy."
    class="h-[56px] w-[56px] cursor-pointer transition-transform group-hover/{imageBox}:scale-105 group-active/{imageBox}:scale-95 sm:h-[240px] sm:w-[240px]"
    loading="eager"
    draggable="false"
  />
  <div data-sparks class="">
    <h1
      data-sparks
      class="cursor-default text-3xl font-bold tracking-tighter transition-transform sm:text-3xl sm:tracking-tight"
    >
      Trevor Tyler Lee
      <div
        data-sparks
        class="font-mono text-sm font-normal lowercase tracking-normal text-textVariant"
      >
        @trevortylerlee
      </div>
    </h1>
    <div
      data-sparks
      class="hidden max-w-[300px] grid-cols-2 gap-2 pt-8 sm:grid"
    >
      <a
        href="https://bsky.app/profile/trevortylerlee.com"
        class="link group flex items-center gap-1 text-lg"
      >
        🦋 Bluesky <Icon
          class="text-text group-hover:text-primary group-focus-visible:text-primary"
          name="external"
        />
      </a>
      <a
        href="mailto:trevortylerlee@gmail.com"
        class="link group flex items-center gap-1 text-lg"
      >
        ✉️ Email <Icon
          class="text-text group-hover:text-primary group-focus-visible:text-primary"
          name="external"
        />
      </a>
      <a
        href="https://github.com/trevortylerlee"
        class="link group flex items-center gap-1 text-lg"
      >
        💻 Github <Icon
          class="text-text group-hover:text-primary group-focus-visible:text-primary"
          name="external"
        />
      </a>
      <a href="/rss.xml" class="link group flex items-center gap-1 text-lg">
        🔖 RSS <Icon
          class="text-text group-hover:text-primary group-focus-visible:text-primary"
          name="external"
        />
      </a>
      <a
        href="/trevor-lee-resume.pdf"
        class="link group flex items-center gap-1 text-lg"
      >
        📎 Resume <Icon
          class="text-text group-hover:text-primary group-focus-visible:text-primary"
          name="download"
        />
      </a>
    </div>
  </div>
</image-box>
<div class="grid max-w-[300px] grid-cols-2 gap-2 sm:hidden">
  <a
    href="https://bsky.app/profile/trevortylerlee.com"
    class="link group flex items-center gap-1 text-lg"
  >
    🦋 Bluesky <Icon
      class="text-text group-hover:text-primary group-focus-visible:text-primary"
      name="external"
    />
  </a>
  <a
    href="mailto:trevortylerlee@gmail.com"
    class="link group flex items-center gap-1 text-lg"
  >
    ✉️ Email <Icon
      class="text-text group-hover:text-primary group-focus-visible:text-primary"
      name="external"
    />
  </a>
  <a
    href="https://github.com/trevortylerlee"
    class="link group flex items-center gap-1 text-lg"
  >
    💻 Github <Icon
      class="text-text group-hover:text-primary group-focus-visible:text-primary"
      name="external"
    />
  </a>
  <a href="/rss.xml" class="link group flex items-center gap-1 text-lg">
    🔖 RSS <Icon
      class="text-text group-hover:text-primary group-focus-visible:text-primary"
      name="external"
    />
  </a>
  <a
    href="/trevor-lee-resume.pdf"
    class="link group flex items-center gap-1 text-lg"
  >
    📎 Resume <Icon
      class="text-text group-hover:text-primary group-focus-visible:text-primary"
      name="download"
    />
  </a>
</div>

<script>
  class ImageBox extends HTMLElement {
    constructor() {
      super();
    }
  }

  document.addEventListener("DOMContentLoaded", () => {
    const imageBox = document.querySelector("#image-box");

    const featureImage = document.querySelector(
      "#feature-image",
    ) as HTMLImageElement;
    const original = featureImage.src;

    let count = 0;

    if (imageBox) {
      const imageString = imageBox.getAttribute("data-images");
      const orderedImages = imageString ? JSON.parse(imageString) : null;
      const images = [...orderedImages].sort(() => Math.random() - 0.5);

      if (images) {
        if (featureImage) {
          imageBox.addEventListener("click", () => {
            if (count === images.length) {
              count = 0;
              featureImage.src = original;
            } else {
              featureImage.src = images[count].src;
              count += 1;
            }
          });
        }
      }
    }
  });

  customElements.define("image-box", ImageBox);
</script>
