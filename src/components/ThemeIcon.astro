---
import { Icon } from 'astro-icon'

const darkModeColor = '#ff0080';
const lightModeColor = '#0000FF';
---

<button
  id="themeToggle"
  aria-label="Switch between light and dark mode"
>
  <Icon name="lucide:sun" size="48" />
  <Icon name="lucide:moon" size="48" />
</button>

<style define:vars={{ lightModeColor, darkModeColor }}>
  #themeToggle {
    cursor: pointer;
  }

  button {
    padding: 0 !important;
  }

  [astro-icon="lucide:moon"] {
    display: none;
    transition: 0.2s;
  }
  [astro-icon="lucide:moon"]:hover,
  [astro-icon="lucide:moon"]:focus] {
    color: var(--darkModeColor);
    transform: scale(1.02);
  }
  [astro-icon="lucide:sun"] {
    display: block;
    stroke: black;
    transition: 0.2s;
  }
  [astro-icon="lucide:sun"]:hover,
  [astro-icon="lucide:sun"]:focus {
    color: var(--primary-color);
    transform: scale(1.02);
  }

  :global(.dark) [astro-icon="lucide:moon"] {
    fill: transparent;
    display: block;
  }
  :global(.dark) [astro-icon="lucide:sun"] {
    display: none;
  }

  [astro-icon] {
        color: black;
    }

  [astro-icon="lucide:moon"] {
        color: white;
  }

  button:hover [astro-icon="lucide:sun"] {
    color: var(--lightModeColor);
    transform: scale(1.02);
  }

  button:focus [astro-icon="lucide:sun"] {
    color: var(--lightModeColor);
    transform: scale(1.02);
  }

  :global(.dark) button:hover [astro-icon="lucide:moon"] {
    color: var(--darkModeColor);
    transform: scale(1.02);
  }

  :global(.dark) button:focus [astro-icon="lucide:moon"] {
    color: var(--darkModeColor);
    transform: scale(1.02);
  }

  button {
    background: none !important;
    box-shadow: none !important;
  }
</style>

<script>
  const theme = (() => {
    if (
      typeof localStorage !== 'undefined' &&
      localStorage.getItem('theme')
    ) {
      return localStorage.getItem('theme');
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
    return 'light';
  })();

  if (theme === 'light') {
    document.documentElement.classList.remove('dark');
  } else {
    document.documentElement.classList.add('dark');
  }

  window.localStorage.setItem('theme', theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle('dark');

    const isDark = element.classList.contains('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
  };

  document
    .getElementById('themeToggle')
    .addEventListener('click', handleToggleClick);
  document
    .getElementById('themeToggle')
    .addEventListener('keydown', (e) => {
      if (e.key === 'Enter') {
        e.preventDefault();
        handleToggleClick();
      }
    });
</script>
