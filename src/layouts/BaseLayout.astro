---
import "../styles/global.css";
import "../styles/preflight.css";

import { ViewTransitions } from "astro:transitions";

import "@fontsource/geist-sans/400.css";
import "@fontsource/geist-sans/500.css";
import "@fontsource/geist-sans/600.css";
import "@fontsource/geist-sans/700.css";
import "@fontsource/geist-sans/800.css";
import "@fontsource/geist-sans/900.css";
import "@fontsource/geist-mono/400.css";
import "@fontsource/geist-mono/700.css";

import { Icon } from "astro-icon/components";

import Breadcrumbs from "@components/Breadcrumbs.astro";
import Footer from "@components/Footer.astro";
import ThemeToggle from "@components/ThemeToggle.tsx";

const { pageTitle, pageSlug, category, fullWidth } = Astro.props;

let onIndex = false;
if (pageTitle === "Trevor Lee | Homepage") {
  onIndex = true;
}
---

<html id="html" lang="en" prefix="og: http://ogp.me/ns#">
  <head>
    <script is:inline data-astro-rerun>
      function init() {
        animate();

        const themes = ["dark", "light"];

        const applyTheme = (theme) => {
          const themesToRemove = themes.filter((t) => t !== theme);
          themesToRemove.forEach((t) => {
            document.documentElement.classList.remove(t);
          });
          document.documentElement.classList.add(theme);
        };

        const getPreferredTheme = () => {
          if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
            return "dark";
          } else {
            return "light";
          }
        };

        const setGiscusTheme = (theme) => {
          const giscus = document.querySelector(".giscus-frame");

          if (giscus) {
            const url = new URL(giscus.src);
            url.searchParams.set("theme", theme);
            giscus.src = url.toString();
          }
        };

        function animate() {
          const animateUpElements = document.querySelectorAll(".animate-up");
          animateUpElements.forEach((element, index) => {
            setTimeout(() => {
              element.classList.add("show");
            }, index * 50);
          });

          const animateDownElements =
            document.querySelectorAll(".animate-down");
          animateDownElements.forEach((element, index) => {
            setTimeout(() => {
              element.classList.add("show");
            }, index * 50);
          });
        }

        const savedTheme = localStorage.getItem("theme");
        const theme = savedTheme ? savedTheme : getPreferredTheme();
        applyTheme(theme);

        if (theme === "dark") {
          setGiscusTheme("dark");
        } else {
          setGiscusTheme("light");
        }
      }

      document.addEventListener("astro:page-load", () => {
        const themes = ["dark", "light"];

        const applyTheme = (theme) => {
          const themesToRemove = themes.filter((t) => t !== theme);
          themesToRemove.forEach((t) => {
            document.documentElement.classList.remove(t);
          });
          document.documentElement.classList.add(theme);
        };

        const getPreferredTheme = () => {
          if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
            return "dark";
          } else {
            return "light";
          }
        };

        const toggleTheme = () => {
          const selectedTheme = select.value;

          if (selectedTheme === "auto") {
            localStorage.removeItem("theme");
            const newTheme = getPreferredTheme();
            applyTheme(newTheme);
            setGiscusTheme(newTheme);
          } else {
            localStorage.setItem("theme", selectedTheme);
            applyTheme(selectedTheme);

            if (selectedTheme === "dark") {
              setGiscusTheme("dark");
            } else {
              setGiscusTheme("light");
            }
          }
        };

        const setGiscusTheme = (theme) => {
          const giscus = document.querySelector(".giscus-frame");

          if (giscus) {
            const url = new URL(giscus.src);
            url.searchParams.set("theme", theme);
            giscus.src = url.toString();
          }
        };

        init();
        const savedTheme = localStorage.getItem("theme");
        const select = document.querySelector("#theme-toggle");
        select.value = savedTheme ? savedTheme : "auto";
        select.addEventListener("change", toggleTheme);
      });
      init();
    </script>
    <script
      is:inline
      src="https://analytics.us.umami.is/script.js"
      data-website-id="db9f8fea-3974-458c-8aeb-27c9461841e4"></script>
    <meta charset="utf-8" />
    <link rel="icon" href="/favicon.ico" sizes="any" />
    <link rel="icon" href="/favicon.png" type="image/svg+xml" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
    <link
      rel="alternate"
      type="application/rss+xml"
      title="Trevor Tyler Lee"
      href="https://trevortylerlee.com/rss.xml"
    />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <meta property="og:image" content="/og.jpg" />
    <meta name="description" content="Trevor Tyler Lee | @trevortylerlee " />
    <title>{pageTitle}</title>
    <ViewTransitions />
  </head>
  <body class="bg-backdrop">
    <div
      class="pointer-events-none absolute inset-0 -z-10 h-full w-full bg-white bg-[radial-gradient(#e5e7eb_1px,transparent_1px)] [background-size:16px_16px] dark:invisible"
    >
    </div>
    <div
      class=`bg-centerBackground dark:bg-centerBackground/90 text-text ${fullWidth ? "" : "px-4"} m-auto max-w-[640px]`
    >
      <nav class="mb-16 flex w-full flex-col gap-6 py-4">
        <div class="flex items-center justify-between">
          <a
            href="/"
            class="cursor-default rounded bg-white p-2 text-xs font-semibold text-neutral-900 shadow-sm ring-1 ring-inset ring-neutral-950/15 hover:ring-neutral-950/25 focus-visible:ring-neutral-950/25 dark:bg-white/5 dark:text-white dark:ring-white/15 dark:hover:ring-white/25 dark:focus-visible:ring-white/25 sm:p-1"
            aria-label="Homepage"
          >
            <Icon name="home" class="size-6" />
          </a>
          <ThemeToggle client:load />
        </div>
        {
          !onIndex && (
            <Breadcrumbs
              pageTitle={pageTitle}
              category={category}
              pageSlug={pageSlug}
            />
          )
        }
      </nav>
      <main>
        <slot />
      </main>
      <Footer />
    </div>
    <style>
      body {
        background: rgb(var(--background));
        background-repeat: repeat;
      }

      .dark body {
        background: black;
      }

      @media screen and (prefers-reduced-motion: no-preference) {
        /* https://maya.land/ */
        .dark body {
          background-image: url("/star.gif");
        }
      }
    </style>

    <script>
      // @ts-ignore
      const select: HTMLSelectElement = document.querySelector("#theme-toggle");
      const mediaQuery = window.matchMedia("(prefers-color-scheme: dark)");
      mediaQuery.addEventListener("change", (e) => {
        if (select.value === "auto") {
          if (e.matches) {
            document.documentElement.classList.remove("light");
            document.documentElement.classList.add("dark");
          } else {
            document.documentElement.classList.remove("dark");
            document.documentElement.classList.add("light");
          }
        }
      });
    </script>
    <noscript>
      <style>
        .animate-up,
        .animate-down {
          opacity: 1 !important;
          transform: translateY(0) !important;
          filter: none !important;
        }
      </style>
    </noscript>
    <style>
      .avatar {
        mask-image: url("/mask.svg");
        -webkit-mask-image: url("/mask.svg");
      }
    </style>
  </body>
</html>
