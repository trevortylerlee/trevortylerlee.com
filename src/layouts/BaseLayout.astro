---
import "../styles/global.css";
import "../styles/preflight.css";

import "@fontsource/geist-sans/400.css";
import "@fontsource/geist-sans/500.css";
import "@fontsource/geist-sans/600.css";
import "@fontsource/geist-sans/700.css";
import "@fontsource/geist-sans/800.css";
import "@fontsource/geist-sans/900.css";
import "@fontsource/geist-mono/400.css";
import "@fontsource/geist-mono/700.css";

import { Icon } from "astro-icon/components";

import Navigation from "../components/Navigation.astro";
import Contact from "../components/Contact.tsx";
import Breadcrumbs from "@components/Breadcrumbs.astro";
import Footer from "@components/Footer.astro";

const { pageTitle, pageSlug, category, fullWidth } = Astro.props;

let onIndex = false;
if (pageTitle === "Trevor Lee | Homepage") {
  onIndex = true;
}
---

<html id="html" lang="en" prefix="og: http://ogp.me/ns#">
  <head>
    <script is:inline>
      const themes = [
        "dark",
        "light",
        "hacker",
        "red-dragon",
        "ube",
        "vice-city",
      ];

      const applyTheme = (theme) => {
        const themesToRemove = themes.filter((t) => t !== theme);
        themesToRemove.forEach((t) => {
          document.documentElement.classList.remove(t);
        });
        document.documentElement.classList.add(theme);
      };

      const getPreferredTheme = () => {
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          return "dark";
        } else {
          return "light";
        }
      };

      const savedTheme = localStorage.getItem("theme");
      const theme = savedTheme ? savedTheme : getPreferredTheme();
      applyTheme(theme);

      window.addEventListener("DOMContentLoaded", () => {
        const select = document.querySelector("#theme-toggle");
        select.value = savedTheme ? savedTheme : "auto";

        const toggleTheme = () => {
          const selectedTheme = select.value;
          if (selectedTheme === "auto") {
            localStorage.removeItem("theme");
            applyTheme(getPreferredTheme());
          } else {
            localStorage.setItem("theme", selectedTheme);
            applyTheme(selectedTheme);
          }
        };

        select.addEventListener("change", toggleTheme);
      });
    </script>
    <script
      defer
      src="https://analytics.us.umami.is/script.js"
      data-website-id="db9f8fea-3974-458c-8aeb-27c9461841e4"></script>
    <meta charset="utf-8" />
    <link rel="icon" href="/favicon.ico" sizes="any" />
    <link rel="icon" href="/favicon.png" type="image/svg+xml" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
    <link
      rel="alternate"
      type="application/rss+xml"
      title="Trevor Tyler Lee"
      href="https://trevortylerlee.com/rss.xml"
    />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <meta property="og:image" content="/og.jpg" />
    <meta name="description" content="Trevor Tyler Lee | @trevortylerlee " />
    <title>{pageTitle}</title>
  </head>
  <body class="bg-backdrop">
    <div
      class=`bg-centerBackground text-text ${fullWidth ? "" : "px-4"} m-auto max-w-[640px]`
    >
      <nav class="w-full py-4">
        <div class="flex items-center justify-between">
          <div>
            {
              !onIndex && (
                <Breadcrumbs
                  pageTitle={pageTitle}
                  category={category}
                  pageSlug={pageSlug}
                />
              )
            }
          </div>
          <div class="group flex items-center gap-1 py-1 font-mono text-sm">
            <label class="text-textVariant" for="theme-toggle">theme:</label>
            <select
              class="px-1 font-sans text-text"
              name="theme-toggle"
              id="theme-toggle"
            >
              <option value="auto">auto</option>
              <option value="dark">dark</option>
              <option value="light">light</option>
              <hr />
              <option value="hacker">hacker</option>
              <option value="red-dragon">red dragon</option>
              <option value="ube">ube</option>
              <option value="vice-city">vice city</option>
            </select>
          </div>
        </div>
      </nav>
      <main>
        <slot />
      </main>
      <Footer />
    </div>
  </body><style>
    body {
      background: rgb(var(--background));
      background-repeat: repeat;
    }

    .dark body {
      background: black;
    }

    @media screen and (prefers-reduced-motion: no-preference) {
      /* https://maya.land/ */
      .dark body {
        background-image: url("/star.gif");
      }
    }
  </style>

  <script>
    // @ts-ignore
    const select: HTMLSelectElement = document.querySelector("#theme-toggle");
    const mediaQuery = window.matchMedia("(prefers-color-scheme: dark)");
    mediaQuery.addEventListener("change", (e) => {
      if (select.value === "auto") {
        if (e.matches) {
          document.documentElement.classList.remove("light", "sith", "ube");
          document.documentElement.classList.add("dark");
        } else {
          document.documentElement.classList.remove("dark", "sith", "ube");
          document.documentElement.classList.add("light");
        }
      }
    });
  </script>
</html>
